@model jobSchedule.Models.Schedule

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Schedule</h4>
    @ViewBag.tay
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.lifeguardID, "lifeguardID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("lifeguardID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.lifeguardID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.dutyDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.dutyDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
            @Html.ValidationMessageFor(model => model.dutyDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.timeStart, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.timeStart, new { htmlAttributes = new { @class = "form-control", type = "time" } })
            @Html.ValidationMessageFor(model => model.timeStart, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.timeEnd, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.timeEnd, new { htmlAttributes = new { @class = "form-control", type = "time" } })
            @Html.ValidationMessageFor(model => model.timeEnd, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.city_id, "city_id", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("city_id", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.city_id, "", new { @class = "text-danger" })
        </div>
    </div>

    @if (ViewBag.city_id != null)
    {<div class="form-group">
            @Html.Label( "Beach Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.beachID, new SelectList(" "), "Select Beach Name", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.beachID, "", new { @class = "text-danger" })
            </div>
        </div>}

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script>
    $(document).ready(function () {
        $("#city_id").change(function () {
            $.get("/Schedules/cityCal", { city_id: $("#city_id").val() }, function (data) {
                $("#beachID").empty();
                $.each(data, function (index, row) {
                    $("#beachID").append("<option value='" + row.beachID + "'>" + row.beachName + "</option>")
                });
            });
        })
    });
</script>

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
